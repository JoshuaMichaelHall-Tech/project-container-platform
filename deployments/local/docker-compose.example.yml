version: '3.8'

services:
  # API Server
  api:
    build:
      context: ../../
      dockerfile: deployments/local/api.Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ../../src:/app/src
    environment:
      - ENV_FILE=.env
      - LOG_LEVEL=debug
    depends_on:
      - db
      - redis
    networks:
      - container-security-network

  # Web UI
  ui:
    build:
      context: ../../
      dockerfile: deployments/local/ui.Dockerfile
    ports:
      - "8080:80"
    volumes:
      - ../../src/ui:/app/src
    depends_on:
      - api
    networks:
      - container-security-network

  # Vulnerability Scanner
  scanner:
    build:
      context: ../../
      dockerfile: deployments/local/scanner.Dockerfile
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ../../src/scanners:/app/scanners
    environment:
      - API_URL=http://api:8000
      - SCAN_INTERVAL=300
    depends_on:
      - api
    networks:
      - container-security-network

  # Policy Engine
  policy-engine:
    build:
      context: ../../
      dockerfile: deployments/local/policy.Dockerfile
    volumes:
      - ../../src/policies:/app/policies
    environment:
      - API_URL=http://api:8000
    depends_on:
      - api
    networks:
      - container-security-network

  # Registry Mirror (for local development)
  registry:
    image: registry:2
    ports:
      - "5000:5000"
    volumes:
      - registry-data:/var/lib/registry
    networks:
      - container-security-network

  # Database
  db:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=container_security
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - container-security-network

  # Cache
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - container-security-network

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:v2.43.0
    ports:
      - "9090:9090"
    volumes:
      - ../../deployments/local/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - container-security-network

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:9.5.2
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ../../deployments/local/grafana/provisioning:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - container-security-network

volumes:
  db-data:
  redis-data:
  prometheus-data:
  grafana-data:
  registry-data:

networks:
  container-security-network:
    driver: bridge
EOF < /dev/null